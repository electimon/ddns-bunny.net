name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  checks: write
  packages: read
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          source-url: https://nuget.pkg.github.com/prplecake/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Version
        id: version
        run: echo "VERSION=$(date +'%Y.%m.%d-%H%M%S')" >> $GITHUB_ENV
      - name: Create Git Tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    strategy:
      matrix:
        rid: [linux-x64, linux-arm64, win-x64, osx-x64]
    permissions:
      contents: write
      packages: read
      checks: write
    runs-on: ubuntu-latest
    name: publish-${{ matrix.rid }}
    needs: [run-tests, create-release]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          source-url: https://nuget.pkg.github.com/prplecake/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish CLI (${{ matrix.rid }})
        run: |
          dotnet publish src/BunnyDDNS.CLI/BunnyDDNS.CLI.csproj -c Release -r ${{ matrix.rid }} --self-contained -p:PublishSingleFile=true -p:PublishReadyToRun=true
          zip -j ddns-bunny.net-${{ github.ref_name }}-${{ matrix.rid }}.zip src/BunnyDDNS.CLI/bin/Release/net8.0/${{ matrix.rid }}/publish/* README.md LICENSE
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ddns-bunny.net-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-release:
    strategy:
      matrix:
        rid: [linux-x64, linux-arm64, win-x64, osx-x64]
    runs-on: ubuntu-latest
    name: Test Release (${{ matrix.rid }})
    needs: publish
    permissions:
      contents: write
      packages: read
    steps:
      - name: Download release
        uses: robinraju/release-downloader@v1
        with:
          latest: true
          fileName: ddns-bunny.net-${{ github.ref_name }}-${{ matrix.rid }}.zip
          extract: true
          out-file-path: release
      - name: Test Release Package
        id: testReleasePackage
        run: |
          cd release; ls
          count=$(ls | wc -l)
          if [ $count -ne $EXPECTED_COUNT ]; then
            echo "Expected $EXPECTED_COUNT files, found $count"
            exit 1
          fi
        env:
          EXPECTED_COUNT: 5
      - name: Delete Release
        if: always() && (steps.testReleasePackage.outcome == 'failure')
        run: |
          gh release delete ${{ github.ref_name }} --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
